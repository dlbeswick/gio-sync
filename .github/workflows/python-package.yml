name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      pypi_repo: 
        default: "testpypi"
      
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Dependencies
      run: |
        python -m pip install --upgrade pip build virtualenv twine
        sudo apt-get update && sudo apt-get install -y libgirepository1.0-dev
    - name: Build
      run: |
        python -m build
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/*.whl
    - name: Install and test
      run: |
        virtualenv --clear venv
        . venv/bin/activate
        python -m pip install dist/*.whl
        python test/test.py
        
  release_if_tagged:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - uses: actions/download-artifact@v3
      with:
        name: dist
    - run: ls -la

    # Extract the most recent block of release notes from the markdown file.
    - run: sed -n 'p; :loop n; /^# /q; p; b loop' CHANGELOG.md > release-notes.md
    - run: cat release-notes.md
    
    - run:
        gh release create
        --draft
        --verify-tag ${{ github.ref_name }}
        --title ${{ github.ref_name }}
        --notes-file release-notes.md
        *.whl
      env:
        GITHUB_TOKEN: ${{ secrets.github }}
